<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Aptitudes" xml:space="preserve">
    <value>Je déclare avoir les aptitudes requises pour exercer la mission d’arbitre conformément à toutes les dispositions de ce Règlement</value>
  </data>
  <data name="Availability" xml:space="preserve">
    <value>Je déclare avoir la disponibilité requise pour mener à bien la mission qui m’est confiée</value>
  </data>
  <data name="ConfirmAndForwardDoc" xml:space="preserve">
    <value>Valider et transmettre le document</value>
  </data>
  <data name="DecideTheDispute" xml:space="preserve">
    <value>Je déclare que rien ne s’oppose à ce que je tranche le Litige opposant les Parties en qualité d’arbitre</value>
  </data>
  <data name="DeclarationOfAcceptanceAndIndependence" xml:space="preserve">
    <value>Déclaration d'acceptation et d'indépendance</value>
  </data>
  <data name="Disclosure" xml:space="preserve">
    <value>A ma connaissance, il n’existe aucun fait ou circonstance passé ou présent qui nécessite d’être révélé parce qu’il pourrait être de nature à mettre en cause mon indépendance dans l’esprit de l’une quelconque des parties</value>
  </data>
  <data name="DownloadAndSign" xml:space="preserve">
    <value>Téléchargez puis signez électroniquement le document</value>
  </data>
  <data name="DownloadDocument" xml:space="preserve">
    <value>Télécharger le document</value>
  </data>
  <data name="GenerateTheDocument" xml:space="preserve">
    <value>Générer le document</value>
  </data>
  <data name="Independence" xml:space="preserve">
    <value>Je suis indépendant de chacune des parties en cause et entend le rester</value>
  </data>
  <data name="ITheUndersigned" xml:space="preserve">
    <value>Je soussigné</value>
  </data>
  <data name="MissionAcceptance" xml:space="preserve">
    <value>déclare personnellement accepter la mission d’arbitre selon le Règlement d’arbitrage de l’IDAM dans la présente affaire. En conséquence</value>
  </data>
  <data name="ReadAndUnderstood" xml:space="preserve">
    <value>Je déclare avoir pris connaissance des exigences du Règlement d’arbitrage de l’IDAM et de la Charte éthique</value>
  </data>
  <data name="UploadDoc" xml:space="preserve">
    <value>TELECHARGER DOCUMENT</value>
  </data>
  <data name="UploadSignedDoc" xml:space="preserve">
    <value>Téléchargez le document signé électroniquement</value>
  </data>
  <data name="AddNewQualifications" xml:space="preserve">
    <value>Ajouter de nouvelles compétences</value>
  </data>
  <data name="ArbitrationCenter" xml:space="preserve">
    <value>Centre d'arbitrage</value>
  </data>
  <data name="AssignedDisputesWaitingArbConf" xml:space="preserve">
    <value>Conflits assignés, en attente de validation de l'arbitre</value>
  </data>
  <data name="Center" xml:space="preserve">
    <value>Centre</value>
  </data>
  <data name="CloseDebate" xml:space="preserve">
    <value>Clore le débat</value>
  </data>
  <data name="CloseProceeding" xml:space="preserve">
    <value>Clore la procédure</value>
  </data>
  <data name="DebateClosed" xml:space="preserve">
    <value>Débat clos</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Détails</value>
  </data>
  <data name="DisputesReadyForArbitration" xml:space="preserve">
    <value>Conflits prêts pour arbitrage</value>
  </data>
  <data name="DisputesUnderArbitration" xml:space="preserve">
    <value>Conflits en cours d'arbitrage</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Durée du débat (en jours)</value>
  </data>
  <data name="EndOfDebate" xml:space="preserve">
    <value>Clôture du débat</value>
  </data>
  <data name="EndOfDebateAtLatest" xml:space="preserve">
    <value>Fin du débat au plus tard dans</value>
  </data>
  <data name="FAQ" xml:space="preserve">
    <value>FAQ</value>
  </data>
  <data name="LinkedInProfile" xml:space="preserve">
    <value>Profil LinkedIn</value>
  </data>
  <data name="ListOfArbitrators" xml:space="preserve">
    <value>Liste des arbitres</value>
  </data>
  <data name="Messages" xml:space="preserve">
    <value>Messages</value>
  </data>
  <data name="MyCases" xml:space="preserve">
    <value>Mes dossiers d'arbitrage</value>
  </data>
  <data name="NoQualificationsFilledOut" xml:space="preserve">
    <value>Aucune compétence renseignée</value>
  </data>
  <data name="Presentation" xml:space="preserve">
    <value>Présentation</value>
  </data>
  <data name="ProceduralOrder" xml:space="preserve">
    <value>Ordonnance de procédure</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profil</value>
  </data>
  <data name="Qualification" xml:space="preserve">
    <value>Compétence</value>
  </data>
  <data name="Qualifications" xml:space="preserve">
    <value>Compétences</value>
  </data>
  <data name="RefuseCase" xml:space="preserve">
    <value>Refuser ce dossier</value>
  </data>
  <data name="ReOpenDebate" xml:space="preserve">
    <value>Ré-ouvrir le débat</value>
  </data>
  <data name="ReOpenHowLong" xml:space="preserve">
    <value>Pour quelle durée souhaitez-vous ré-ouvrir ce débat ?</value>
  </data>
  <data name="RespondDebate" xml:space="preserve">
    <value>Répondre à ce débat</value>
  </data>
  <data name="ReturnToDispute" xml:space="preserve">
    <value>Retourner au conflit</value>
  </data>
  <data name="TerminationOfProceedings" xml:space="preserve">
    <value>Clôture de la procédure</value>
  </data>
  <data name="ToBecomeArbitrator" xml:space="preserve">
    <value>Procédure pour devenir arbitre sur FastArbitre</value>
  </data>
  <data name="TypeResponseHere" xml:space="preserve">
    <value>Tapez votre réponse ici</value>
  </data>
  <data name="WarningAboutToRefuseCase" xml:space="preserve">
    <value>Vous êtes sur le point de refuser ce conflit. Merci de noter dans le commentaire ci-dessous la ou les raisons qui vous poussent à refuser ce cas.
                Celui-ci sera transmis par email aux parties prenantes du conflit.</value>
  </data>
  <data name="WarningAboutToRefuseCase2" xml:space="preserve">
    <value>Vous êtes sur le point de refuser ce conflit. Merci de noter dans le commentaire ci-dessous la ou les raisons qui vous poussent à refuser ce cas.
                Celui-ci sera transmis par email au centre pour information.</value>
  </data>
  <data name="WarningEndOfDebate" xml:space="preserve">
    <value>Clôturer le débat implique que les participants ont répondu à vos attentes et que vous pouvez statuer à présent sur ce point. Vous êtes sur le point de cloturer ce débat. Plus personne ne pourra intervenir dessus. Êtes-vous sur ?</value>
  </data>
  <data name="WriteAnsHere" xml:space="preserve">
    <value>Tapez votre réponse ici</value>
  </data>
  <data name="WrittenBy" xml:space="preserve">
    <value>Ecrit par</value>
  </data>
</root>