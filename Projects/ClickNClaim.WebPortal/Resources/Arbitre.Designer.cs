//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClickNClaim.WebPortal.Resources {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Arbitre {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Arbitre() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ClickNClaim.WebPortal.Resources.Arbitre", typeof(Arbitre).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add new qualifications.
        /// </summary>
        public static string AddNewQualifications {
            get {
                return ResourceManager.GetString("AddNewQualifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à I declare possessing the necessary skills for the mission of arbitrator in accordance with the provisions of these Arbitration Rules.
        /// </summary>
        public static string Aptitudes {
            get {
                return ResourceManager.GetString("Aptitudes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Arbitration center.
        /// </summary>
        public static string ArbitrationCenter {
            get {
                return ResourceManager.GetString("ArbitrationCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Assigned disputes awaiting confirmation by arbitrator.
        /// </summary>
        public static string AssignedDisputesWaitingArbConf {
            get {
                return ResourceManager.GetString("AssignedDisputesWaitingArbConf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à I declare being available to complete the mission that I am entrusted with.
        /// </summary>
        public static string Availability {
            get {
                return ResourceManager.GetString("Availability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Center.
        /// </summary>
        public static string Center {
            get {
                return ResourceManager.GetString("Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Close the debate.
        /// </summary>
        public static string CloseDebate {
            get {
                return ResourceManager.GetString("CloseDebate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Close proceedings.
        /// </summary>
        public static string CloseProceeding {
            get {
                return ResourceManager.GetString("CloseProceeding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Confirm and forward the document.
        /// </summary>
        public static string ConfirmAndForwardDoc {
            get {
                return ResourceManager.GetString("ConfirmAndForwardDoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Exchanges between the parties closed.
        /// </summary>
        public static string DebateClosed {
            get {
                return ResourceManager.GetString("DebateClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à I declare that nothing impedes my deciding as arbitrator the Dispute opposing the Parties.
        /// </summary>
        public static string DecideTheDispute {
            get {
                return ResourceManager.GetString("DecideTheDispute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Declaration of acceptance and independence.
        /// </summary>
        public static string DeclarationOfAcceptanceAndIndependence {
            get {
                return ResourceManager.GetString("DeclarationOfAcceptanceAndIndependence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Details.
        /// </summary>
        public static string Details {
            get {
                return ResourceManager.GetString("Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à To my knowledge, there are no facts or circumstances past or present that require disclosure because they may question my independence in the eyes of any of the parties.
        /// </summary>
        public static string Disclosure {
            get {
                return ResourceManager.GetString("Disclosure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disputes ready for arbitration.
        /// </summary>
        public static string DisputesReadyForArbitration {
            get {
                return ResourceManager.GetString("DisputesReadyForArbitration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disputes under arbitration.
        /// </summary>
        public static string DisputesUnderArbitration {
            get {
                return ResourceManager.GetString("DisputesUnderArbitration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Download then sign electronically the document.
        /// </summary>
        public static string DownloadAndSign {
            get {
                return ResourceManager.GetString("DownloadAndSign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Download the document.
        /// </summary>
        public static string DownloadDocument {
            get {
                return ResourceManager.GetString("DownloadDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Duration of the exchanges between the parties (in days).
        /// </summary>
        public static string Duration {
            get {
                return ResourceManager.GetString("Duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Closure of the exchanges between the parties.
        /// </summary>
        public static string EndOfDebate {
            get {
                return ResourceManager.GetString("EndOfDebate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à End of the exchanges between the parties at the latest in.
        /// </summary>
        public static string EndOfDebateAtLatest {
            get {
                return ResourceManager.GetString("EndOfDebateAtLatest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à FAQ.
        /// </summary>
        public static string FAQ {
            get {
                return ResourceManager.GetString("FAQ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generate the document.
        /// </summary>
        public static string GenerateTheDocument {
            get {
                return ResourceManager.GetString("GenerateTheDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à I am independent from both parties and intend to remain so.
        /// </summary>
        public static string Independence {
            get {
                return ResourceManager.GetString("Independence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à I the undersigned.
        /// </summary>
        public static string ITheUndersigned {
            get {
                return ResourceManager.GetString("ITheUndersigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LinkedIn profile.
        /// </summary>
        public static string LinkedInProfile {
            get {
                return ResourceManager.GetString("LinkedInProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à List of arbitrators.
        /// </summary>
        public static string ListOfArbitrators {
            get {
                return ResourceManager.GetString("ListOfArbitrators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Messages.
        /// </summary>
        public static string Messages {
            get {
                return ResourceManager.GetString("Messages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à declare personally accepting the mission as arbitrator in accordance with IDAM&apos;s Arbitration Rules for the present case. Consequently.
        /// </summary>
        public static string MissionAcceptance {
            get {
                return ResourceManager.GetString("MissionAcceptance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à My cases.
        /// </summary>
        public static string MyCases {
            get {
                return ResourceManager.GetString("MyCases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No qualifications filled out.
        /// </summary>
        public static string NoQualificationsFilledOut {
            get {
                return ResourceManager.GetString("NoQualificationsFilledOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Presentation.
        /// </summary>
        public static string Presentation {
            get {
                return ResourceManager.GetString("Presentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Procedural order.
        /// </summary>
        public static string ProceduralOrder {
            get {
                return ResourceManager.GetString("ProceduralOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profile.
        /// </summary>
        public static string Profile {
            get {
                return ResourceManager.GetString("Profile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Qualification.
        /// </summary>
        public static string Qualification {
            get {
                return ResourceManager.GetString("Qualification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Qualifications.
        /// </summary>
        public static string Qualifications {
            get {
                return ResourceManager.GetString("Qualifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à I declare having read and understood the requirements of IDAM&apos;s Arbitration Rules and Ethical Charter.
        /// </summary>
        public static string ReadAndUnderstood {
            get {
                return ResourceManager.GetString("ReadAndUnderstood", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Refuse this case.
        /// </summary>
        public static string RefuseCase {
            get {
                return ResourceManager.GetString("RefuseCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Re-open exchanges between the parties.
        /// </summary>
        public static string ReOpenDebate {
            get {
                return ResourceManager.GetString("ReOpenDebate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à For how long do you wish to re-open exchanges between the parties?.
        /// </summary>
        public static string ReOpenHowLong {
            get {
                return ResourceManager.GetString("ReOpenHowLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Respond to this exchange.
        /// </summary>
        public static string RespondDebate {
            get {
                return ResourceManager.GetString("RespondDebate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Return to dispute.
        /// </summary>
        public static string ReturnToDispute {
            get {
                return ResourceManager.GetString("ReturnToDispute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Termination of proceedings.
        /// </summary>
        public static string TerminationOfProceedings {
            get {
                return ResourceManager.GetString("TerminationOfProceedings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Procedure to become a FastArbitre arbitrator.
        /// </summary>
        public static string ToBecomeArbitrator {
            get {
                return ResourceManager.GetString("ToBecomeArbitrator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Type your response here.
        /// </summary>
        public static string TypeResponseHere {
            get {
                return ResourceManager.GetString("TypeResponseHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à UPLOAD DOCUMENT.
        /// </summary>
        public static string UploadDoc {
            get {
                return ResourceManager.GetString("UploadDoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upload the electronically signed document.
        /// </summary>
        public static string UploadSignedDoc {
            get {
                return ResourceManager.GetString("UploadSignedDoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You are about to refuse this case. Please indicate below the reasons why you are refusing this case. These will be sent by email to the parties..
        /// </summary>
        public static string WarningAboutToRefuseCase {
            get {
                return ResourceManager.GetString("WarningAboutToRefuseCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You are about to refuse this case. Please indicate below the reasons why you are refusing this case. These will be sent by email to the Centre..
        /// </summary>
        public static string WarningAboutToRefuseCase2 {
            get {
                return ResourceManager.GetString("WarningAboutToRefuseCase2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Closing the exchanges between the parties implies that the participants have met your expectations and that you can now decide on this point. You are about to end this debate. Nobody will be able to come back to it. Are your sure?.
        /// </summary>
        public static string WarningEndOfDebate {
            get {
                return ResourceManager.GetString("WarningEndOfDebate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Write your answer here.
        /// </summary>
        public static string WriteAnsHere {
            get {
                return ResourceManager.GetString("WriteAnsHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Written by.
        /// </summary>
        public static string WrittenBy {
            get {
                return ResourceManager.GetString("WrittenBy", resourceCulture);
            }
        }
    }
}
