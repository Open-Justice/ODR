//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClickNClaim.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using ClickNClaim.Common;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ClickNClaimEntities : DbContext
    {
        public ClickNClaimEntities()
            : base("name=ClickNClaimEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<ProofFile> ProofFiles { get; set; }
        public virtual DbSet<ConflictType> ConflictTypes { get; set; }
        public virtual DbSet<Conflict> Conflicts { get; set; }
        public virtual DbSet<UsersInConflict> UsersInConflicts { get; set; }
        public virtual DbSet<Resolution> Resolutions { get; set; }
        public virtual DbSet<ResolutionType> ResolutionTypes { get; set; }
        public virtual DbSet<Invitation> Invitations { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<Disagreement> Disagreements { get; set; }
        public virtual DbSet<ArbiterSkill> ArbiterSkills { get; set; }
        public virtual DbSet<Skill> Skills { get; set; }
        public virtual DbSet<Debate> Debates { get; set; }
        public virtual DbSet<MailDebate> MailDebates { get; set; }
        public virtual DbSet<LegalDocument> LegalDocuments { get; set; }
        public virtual DbSet<MeetingPropositionAnswer> MeetingPropositionAnswers { get; set; }
        public virtual DbSet<MeetingProposition> MeetingPropositions { get; set; }
        public virtual DbSet<MeetingDebate> MeetingDebates { get; set; }
        public virtual DbSet<DefaultEvent> DefaultEvents { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<ConflictStateHistoric> ConflictStateHistorics { get; set; }
        public virtual DbSet<Email> Emails { get; set; }
        public virtual DbSet<ArbiterInformation> ArbiterInformations { get; set; }
        public virtual DbSet<UserCompany> UserCompanies { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
    
        public virtual ObjectResult<Conflict> GetConflictsWithNotUsedInvitations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Conflict>("GetConflictsWithNotUsedInvitations");
        }
    
        public virtual ObjectResult<Conflict> GetConflictsWithNotUsedInvitations(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Conflict>("GetConflictsWithNotUsedInvitations", mergeOption);
        }
    }
}
